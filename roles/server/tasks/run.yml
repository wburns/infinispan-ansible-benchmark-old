    - name: Start Infinispan container
      containers.podman.podman_container:
        name: infinispan-server
        image: "{{ server_image }}"
        recreate: true
        state: started
        net: host
          #command: ./bin/launch.sh #-Dinfinispan.cluster.stack=kubernetes -Djgroups.dns.query="infinispan-dns-ping.myproject.svc.cluster.local" 
          #workdir: /opt/infinispan
        env:
          USER: "{{ user }}"
          PASS: "{{ pass }}"
            #Not needed with net host as this is required for jgroups
            #ports:
            #- 11222:11222
          JAVA_OPTIONS: "-XX:StartFlightRecording:filename=/tmp/jfr/server-{{ inventory_hostname }}.jfr"
        volume:
          - "/tmp/jfr:/tmp/jfr"

    - name: Wait until server is up or print log
      block:
        - name: Wait for port 11222 to become open on the host, don't start checking for 10 seconds
          ansible.builtin.wait_for:
            host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
            port: 11222
            delay: 10
            timeout: 60
      rescue:
        - name: Collect container log
          ansible.builtin.command: podman container logs infinispan-server
          register: container_log
        - name: Print container log
          ansible.builtin.fail:
            msg: "{{ container_log.stdout_lines }}"

    - name: Print contents of cache_file
      ansible.builtin.debug:
        msg: "the value of {{ cache_file }} is {{ lookup('ansible.builtin.file', cache_file) }}"
      run_once: true

